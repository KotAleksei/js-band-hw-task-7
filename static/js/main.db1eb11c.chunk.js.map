{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/helpers/dropdown/dropdown.js","components/helpers/dropdown/index.js","components/main/headoftodo/index.js","components/main/headoftodo/headoftodo.js","components/main/modalwindow/modalwindow.js","components/main/modalwindow/index.js","components/main/todolist/todoitem.js","components/main/todolist/todolist.js","components/helpers/sorted/sorted.js","components/helpers/sorted/index.js","components/main/main.js","components/app.js","index.js"],"names":["Header","className","Footer","Dropdown","props","items","dropdownInf","visibleToggle","textValue","handleClick","open","type","onClick","map","item","key","defaultProps","PropTypes","shape","bool","name","string","func","HeadOfTodo","state","openByDone","openByPriority","sortBy","priority","completed","searchText","visibleChange","bind","searchByTitle","this","setState","prevState","e","handleSorted","value","target","innerText","handleShowModal","placeholder","onChange","style","height","Component","ModalWindow","title","description","id","handleSubmit","resetData","handleChange","handleCancel","prevProps","editItem","tagName","event","creatTodo","editTodo","preventDefault","resetItem","edit","show","onSubmit","required","undefined","TodoItem","dropdownOpen","handleOpen","todo","toggleDone","deleteTodo","done","TodoList","todolist","sorted","filter","array","copyTodos","todoItem","includes","sort","x","y","Main","showModalWindow","filterItems","sortedItems","Date","now","newItem","length","TodosPage","NotFoundPage","App","exact","path","to","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.db1eb11c.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-header font-weight-bold'>\n      ToDo List\n    </div>\n  )\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-footer font-weight-bold'>\n      Aleksei Kotvitskyi\n    </div>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n\nfunction Dropdown(props) {\n  const { items, dropdownInf, visibleToggle, textValue, handleClick } = props;\n    return (\n      <div className={dropdownInf.open ? 'dropdownList open' : 'dropdownList'} >\n        <button\n         type='button' \n         onClick={() => visibleToggle(dropdownInf)}>\n         { textValue  }\n        </button>\n        <ul>\n          { items.map((item) => {\n            return (\n              <li key={item} onClick={handleClick}>{item}</li>\n            );\n          }) }\n        </ul>\n      </div>\n    )\n}\nDropdown.defaultProps = {\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  handleClick: PropTypes.func\n};\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  visibleToggle: PropTypes.func.isRequired,\n  textValue: PropTypes.string.isRequired,\n  handleClick: PropTypes.func\n};\n\nexport default Dropdown;","import Dropdown from './dropdown';\n\nexport default Dropdown;","import HeadOfTodo from './headoftodo';\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport DropDown from '../../helpers/dropdown';\n\nclass HeadOfTodo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openByDone: {\n        open: true,\n        name: 'openByDone',\n      },\n      openByPriority: {\n        open: true,\n        name: 'openByPriority',\n      },\n      sortBy: {\n        priority: 'all',\n        completed: 'all',\n        searchText: '',\n      },\n    };\n    this.visibleChange = this.visibleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.searchByTitle = this.searchByTitle.bind(this);\n  }\n\n  visibleChange(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  handleClick(e, name) {\n    const { handleSorted } = this.props;\n    const { sortBy } = this.state;\n    const value = e.target.innerText;\n    this.setState(prevState => ({\n      sortBy: {\n        ...prevState.sortBy,\n        [name]: value,\n      },\n    }));\n\n    handleSorted({\n      ...sortBy,\n      [name]: value,\n    });\n  }\n\n  searchByTitle(e) {\n    const { handleSorted } = this.props;\n    const { sortBy } = this.state;\n    const { value } = e.target;\n    this.setState(prevState => ({\n      sortBy: {\n        ...prevState.sortBy,\n        searchText: value,\n      },\n    }));\n\n    handleSorted({\n      ...sortBy,\n      searchText: value,\n    });\n  }\n\n  render() {\n    const {\n      openByDone,\n      openByPriority,\n      sortBy: { priority, completed },\n    } = this.state;\n    const { handleShowModal } = this.props;\n    const priorityItems = ['all', 'high', 'normal', 'low'];\n    const doneItems = ['all', 'open', 'done'];\n    return (\n      <div className=\"d-flex justify-content-around mt-3\">\n        <div>\n          <input\n            type=\"search\"\n            placeholder=\"search by title\"\n            className=\"form-control\"\n            onChange={this.searchByTitle}\n          />\n        </div>\n        <DropDown\n          items={doneItems}\n          dropdownInf={openByDone}\n          visibleToggle={this.visibleChange}\n          handleClick={e => this.handleClick(e, 'completed')}\n          textValue={completed}\n        />\n        <DropDown\n          items={priorityItems}\n          dropdownInf={openByPriority}\n          visibleToggle={this.visibleChange}\n          handleClick={e => this.handleClick(e, 'priority')}\n          textValue={priority}\n        />\n        <button\n          className=\"btn btn-dark col-2 p-0\"\n          style={{ height: '40px' }}\n          type=\"button\"\n          onClick={() => handleShowModal()}\n        >\n          Сreate\n        </button>\n      </div>\n    );\n  }\n}\n\nHeadOfTodo.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n  handleSorted: PropTypes.func.isRequired,\n};\n\nexport default HeadOfTodo;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Dropdown from '../../helpers/dropdown';\nimport './style.css';\n\nclass ModalWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openByPriority: {\n        name: 'openByPriority',\n        open: true,\n      },\n      title: '',\n      description: '',\n      priority: 'high',\n      id: null,\n    };\n\n    this.visibleToggle = this.visibleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resetData = this.resetData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { editItem } = this.props;\n    if (editItem) {\n      if (prevProps.editItem !== editItem) {\n        const { title, description, priority, id } = editItem;\n        this.setState({\n          title,\n          description,\n          priority,\n          id,\n        });\n      }\n    }\n  }\n\n  handleChange(e) {\n    const target = e.target.tagName;\n    const name = target === 'INPUT' ? 'title' : 'description';\n    const { value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    const { title, description, priority, id } = this.state;\n    const { creatTodo, editTodo, editItem } = this.props;\n    event.preventDefault();\n    if (!editItem) {\n      creatTodo({ title, description, priority });\n    } else {\n      editTodo({ title, description, priority, id });\n    }\n\n    this.resetData();\n  }\n\n  handleCancel() {\n    const { handleShowModal } = this.props;\n    handleShowModal();\n    this.resetData();\n  }\n\n  handleClick(e) {\n    this.setState({\n      priority: e.target.innerText,\n    });\n  }\n\n  resetData() {\n    const { resetItem } = this.props;\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'high',\n      edit: false,\n      id: null,\n    });\n    resetItem();\n  }\n\n  visibleToggle(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  render() {\n    const { openByPriority, title, description, priority } = this.state;\n    const { show } = this.props;\n    const priorityItems = ['high', 'normal', 'low'];\n\n    return (\n      <div className={show ? 'modalWindow show' : 'modalWindow'}>\n        <form className=\"createTodoContent\" onSubmit={this.handleSubmit}>\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              title=\"please fill this field\"\n              className=\"form-control\"\n              value={title}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Description:\n            <div>\n              <textarea\n                placeholder=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={this.handleChange}\n              />\n            </div>\n          </label>\n          <p>Priority: </p>\n          <Dropdown\n            items={priorityItems}\n            dropdownInf={openByPriority}\n            visibleToggle={this.visibleToggle}\n            handleClick={this.handleClick}\n            textValue={priority}\n          />\n          <div className=\"btnGroup\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              onClick={this.handleCancel}\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-outline-success\">\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nModalWindow.defaultProps = {\n  editItem: undefined,\n};\n\nModalWindow.propTypes = {\n  show: PropTypes.bool.isRequired,\n  editItem: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n  }),\n  creatTodo: PropTypes.func.isRequired,\n  editTodo: PropTypes.func.isRequired,\n  handleShowModal: PropTypes.func.isRequired,\n  resetItem: PropTypes.func.isRequired,\n};\n\nexport default ModalWindow;\n","import ModalWindow from './modalwindow';\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOpen: false,\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  }\n\n  render() {\n    const { todo, editTodo, toggleDone, deleteTodo } = this.props;\n    const { dropdownOpen } = this.state;\n    return (\n      <div\n        className={`card text-white ${\n          todo.done ? 'bg-success' : 'bg-secondary'\n        }  mb-3 todoItem show`}\n      >\n        <div className=\"card-header\">{todo.title}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{todo.description}</p>\n        </div>\n        <div className=\"d-flex justify-content-around card-footer\">\n          <p>{todo.priority}</p>\n\n          <div\n            className={\n              dropdownOpen ? 'dropdownEditTodo open' : 'dropdownEditTodo'\n            }\n          >\n            <button type=\"button\" onClick={this.handleOpen}>\n              ...\n            </button>\n            <ul>\n              <li\n                onClick={() => {\n                  toggleDone(todo);\n                  this.handleOpen();\n                }}\n              >\n                done\n              </li>\n              <li\n                onClick={() => {\n                  editTodo(todo);\n                  this.handleOpen();\n                }}\n              >\n                edit\n              </li>\n              <li\n                onClick={() => {\n                  deleteTodo(todo);\n                }}\n              >\n                delete\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    done: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n  }).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './todoitem';\nimport './style.css';\n\nfunction TodoList(props) {\n  const { todolist, editTodo, toggleDone, deleteTodo } = props;\n  return (\n    <ul className=\"todoList\">\n      {todolist.map(todo => {\n        return (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            editTodo={editTodo}\n            toggleDone={toggleDone}\n            deleteTodo={deleteTodo}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todolist: PropTypes.arrayOf(\n    PropTypes.shape({\n      done: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  editTodo: PropTypes.func.isRequired,\n  toggleDone: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n","function sorted(filter, array) {\n  let copyTodos = [...array];\n\n  switch (filter.completed) {\n    case 'done': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.done);\n      break;\n    }\n    case 'open': {\n      copyTodos = copyTodos.filter(todoItem => !todoItem.done);\n      break;\n    }\n    default:\n      break;\n  }\n\n  switch (filter.priority) {\n    case 'high': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'high');\n      break;\n    }\n    case 'normal': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'normal');\n      break;\n    }\n    case 'low': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'low');\n      break;\n    }\n    default:\n      break;\n  }\n  if (filter.searchText) {\n    copyTodos = copyTodos.filter(todoItem =>\n      todoItem.title.includes(filter.searchText),\n    );\n  }\n\n  return copyTodos.sort((x, y) => x.done - y.done);\n}\n\nexport default sorted;\n","import sorted from './sorted';\n\nexport default sorted;\n","import React, { Component } from 'react';\nimport HeadOfTodo from './headoftodo';\nimport ModalWindow from './modalwindow';\nimport TodoList from './todolist/todolist';\nimport sorted from '../helpers/sorted';\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModalWindow: false,\n      items: [],\n      filterItems: [],\n      editItem: undefined,\n      sortBy: {\n        searchText: '',\n        priority: 'all',\n        completed: 'all',\n      },\n    };\n\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.creatTodo = this.creatTodo.bind(this);\n    this.editTodo = this.editTodo.bind(this);\n    this.toggleDone = this.toggleDone.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.sortedItems = this.sortedItems.bind(this);\n    this.resetItem = this.resetItem.bind(this);\n  }\n\n  handleShowModal() {\n    this.setState(prevState => ({\n      showModalWindow: !prevState.showModalWindow,\n    }));\n  }\n\n  creatTodo(todo) {\n    const { sortBy } = this.state;\n    this.setState(prevState => {\n      return {\n        items: [\n          ...prevState.items,\n          {\n            id: Date.now(),\n            done: false,\n            ...todo,\n          },\n        ],\n      };\n    });\n\n    this.sortedItems(sortBy);\n    this.handleShowModal();\n  }\n\n  editTodo(todo) {\n    const { sortBy } = this.state;\n    const { id, title, description, priority } = todo;\n    this.setState(prevState => {\n      return {\n        editItem: todo,\n        items: prevState.items.map(todoItem => {\n          const newItem = { ...todoItem };\n          if (todoItem.id === id) {\n            newItem.title = title;\n            newItem.description = description;\n            newItem.priority = priority;\n          }\n          return newItem;\n        }),\n      };\n    });\n\n    this.sortedItems(sortBy);\n    this.handleShowModal();\n  }\n\n  toggleDone(todo) {\n    const { sortBy } = this.state;\n    this.setState(prevState => ({\n      items: prevState.items.map(todoItem => {\n        const newItem = { ...todoItem };\n        if (todoItem.id === todo.id) {\n          newItem.done = !todo.done;\n        }\n        return newItem;\n      }),\n    }));\n\n    this.sortedItems(sortBy);\n  }\n\n  deleteTodo(todo) {\n    const { items, sortBy } = this.state;\n    this.setState({\n      items: items.filter(todoItem => todoItem.id !== todo.id),\n    });\n\n    this.sortedItems(sortBy);\n  }\n\n  sortedItems(filter) {\n    this.setState(prevState => {\n      const filterItems = sorted(filter, prevState.items);\n\n      // for corectly render items with sorting where done Todos in the end\n      // shoul add next condition\n      if (prevState.items.length === filterItems.length) {\n        return {\n          sortBy: { ...filter },\n          filterItems,\n          items: filterItems,\n        };\n      }\n      return {\n        sortBy: { ...filter },\n        filterItems,\n      };\n    });\n  }\n\n  resetItem() {\n    this.setState({ editItem: undefined });\n  }\n\n  render() {\n    const { showModalWindow, filterItems, editItem } = this.state;\n\n    return (\n      <>\n        <HeadOfTodo\n          handleShowModal={this.handleShowModal}\n          handleSorted={this.sortedItems}\n        />\n        <ModalWindow\n          show={showModalWindow}\n          handleShowModal={this.handleShowModal}\n          creatTodo={this.creatTodo}\n          editTodo={this.editTodo}\n          editItem={editItem}\n          resetItem={this.resetItem}\n        />\n        <TodoList\n          todolist={filterItems}\n          editTodo={this.editTodo}\n          toggleDone={this.toggleDone}\n          deleteTodo={this.deleteTodo}\n        />\n      </>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main/main';\n\nfunction TodosPage() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nfunction NotFoundPage() {\n  return <h1>Not Found...</h1>;\n}\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/todos\" />\n      </Route>\n      <Route path=\"/todos\" component={TodosPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}