{"version":3,"sources":["components/header/index.js","components/header/header.js","components/footer/index.js","components/footer/footer.js","components/helpers/dropdown/dropdown.js","components/helpers/dropdown/index.js","actions/index.js","components/main/headoftodo/headoftodo.js","components/main/headoftodo/index.js","components/main/modalwindow/modalwindow.js","components/main/modalwindow/index.js","components/main/todolist/todoitem.js","components/helpers/sorted/sorted.js","components/helpers/sorted/index.js","components/main/todolist/todolist.js","components/main/main.js","components/app.js","reducers/todos.js","reducers/filterTodos.js","reducers/index.js","index.js"],"names":["Header","className","Footer","Dropdown","props","items","dropdownInf","visibleToggle","textValue","handleClick","open","type","onClick","map","item","key","defaultProps","PropTypes","shape","bool","name","string","func","SORTY_BY","searchText","priority","completed","editTodo","todo","showModal","value","HeadOfTodo","state","openByDone","openByPriority","changeVisibleFilters","bind","searchByTitle","this","setState","prevState","e","setFilters","filter","target","innerText","handleShowModal","placeholder","onChange","style","height","Component","connect","filterTodos","dispatch","setVisibilityFilter","ModalWindow","title","description","id","done","handleSubmit","resetData","handleChange","handleCancel","prevProps","editItem","tagName","event","createObject","creatTodoInComp","editTodoInComponent","clearEditItemInComponent","preventDefault","show","onSubmit","required","undefined","todos","createTodo","TodoItem","dropdownOpen","handleOpen","removeTodoInComponent","toggleTodoInComponent","toggleTodo","removeTodo","sorted","array","copyTodos","todoItem","includes","sort","x","y","Main","TodosPage","NotFoundPage","App","exact","path","to","component","initialState","action","Date","now","combineReducers","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.67d06a71.chunk.js","sourcesContent":["import Header from './header';\n\nexport default Header;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-header font-weight-bold'>\n      ToDo List\n    </div>\n  )\n}","import Footer from './footer';\n\nexport default Footer;","import React from 'react';\n\nexport default () => {\n  return (\n    <div className='card-footer font-weight-bold'>\n      Aleksei Kotvitskyi\n    </div>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\n\nfunction Dropdown(props) {\n  const { items, dropdownInf, visibleToggle, textValue, handleClick } = props;\n    return (\n      <div className={dropdownInf.open ? 'dropdownList open' : 'dropdownList'} >\n        <button\n         type='button' \n         onClick={() => visibleToggle(dropdownInf)}>\n         { textValue  }\n        </button>\n        <ul>\n          { items.map((item) => {\n            return (\n              <li key={item} onClick={handleClick}>{item}</li>\n            );\n          }) }\n        </ul>\n      </div>\n    )\n}\nDropdown.defaultProps = {\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  handleClick: PropTypes.func\n};\n\nDropdown.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.string).isRequired,\n  dropdownInf: PropTypes.shape({\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  visibleToggle: PropTypes.func.isRequired,\n  textValue: PropTypes.string.isRequired,\n  handleClick: PropTypes.func\n};\n\nexport default Dropdown;","import Dropdown from './dropdown';\n\nexport default Dropdown;","export const CREATE_TODO = 'CREATE_TODO';\nexport const REMOVE_TODO = 'REMOVE_TODO';\nexport const TOGGLE_TODO = 'TOGGLE_TODO';\nexport const FILTER_TODO = 'FILTER_TODO';\nexport const EDIT_TODO = 'EDIT_TODO';\nexport const SHOW_MODAL = 'SHOW_MODAL';\nexport const CLEAR_EDIT_ITEM = 'CLEAR_EDIT_ITEM';\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\nexport const SORTY_BY = {\n  searchText: '',\n  priority: 'all',\n  completed: 'all',\n};\n\nexport const createTodo = todo => ({\n  type: CREATE_TODO,\n  showModal: true,\n  todo,\n});\n\nexport const editTodo = todo => ({\n  type: EDIT_TODO,\n  showModal: true,\n  todo,\n});\n\nexport const removeTodo = id => ({\n  type: REMOVE_TODO,\n  id,\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  id,\n});\n\nexport const filterTodo = filter => ({\n  type: FILTER_TODO,\n  filter,\n});\n\nexport const showModal = value => ({\n  type: SHOW_MODAL,\n  value,\n});\nexport const clearEditItem = () => ({\n  type: CLEAR_EDIT_ITEM,\n  value: undefined,\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: SET_VISIBILITY_FILTER,\n  filter,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DropDown from '../../helpers/dropdown';\nimport { showModal, setVisibilityFilter } from '../../../actions';\n\nclass HeadOfTodo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      openByDone: {\n        open: true,\n        name: 'openByDone',\n      },\n      openByPriority: {\n        open: true,\n        name: 'openByPriority',\n      },\n    };\n    this.changeVisibleFilters = this.changeVisibleFilters.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.searchByTitle = this.searchByTitle.bind(this);\n  }\n\n  changeVisibleFilters(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  handleClick(e, name) {\n    const { setFilters, filter } = this.props;\n    const value = e.target.innerText;\n    this.setState({ filter });\n\n    setFilters({\n      ...filter,\n      [name]: value,\n    });\n  }\n\n  searchByTitle(e) {\n    const { setFilters, filter } = this.props;\n    const { value } = e.target;\n    this.setState({ filter });\n\n    setFilters({\n      ...filter,\n      searchText: value,\n    });\n  }\n\n  render() {\n    const { openByDone, openByPriority } = this.state;\n    const {\n      handleShowModal,\n      filter: { priority, completed },\n    } = this.props;\n\n    const priorityItems = ['all', 'high', 'normal', 'low'];\n    const doneItems = ['all', 'open', 'done'];\n    return (\n      <div className=\"d-flex justify-content-around mt-3\">\n        <div>\n          <input\n            type=\"search\"\n            placeholder=\"search by title\"\n            className=\"form-control\"\n            onChange={this.searchByTitle}\n          />\n        </div>\n        <DropDown\n          items={doneItems}\n          dropdownInf={openByDone}\n          visibleToggle={this.changeVisibleFilters}\n          handleClick={e => this.handleClick(e, 'completed')}\n          textValue={completed}\n        />\n        <DropDown\n          items={priorityItems}\n          dropdownInf={openByPriority}\n          visibleToggle={this.changeVisibleFilters}\n          handleClick={e => this.handleClick(e, 'priority')}\n          textValue={priority}\n        />\n        <button\n          className=\"btn btn-dark col-2 p-0\"\n          style={{ height: '40px' }}\n          type=\"button\"\n          onClick={() => handleShowModal(true)}\n        >\n          Сreate\n        </button>\n      </div>\n    );\n  }\n}\n\nHeadOfTodo.propTypes = {\n  handleShowModal: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  filter: PropTypes.shape({\n    searchText: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    completed: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  handleShowModal: value => dispatch(showModal(value)),\n  setFilters: filter => dispatch(setVisibilityFilter(filter)),\n});\n\nexport default connect(\n  state => ({ filter: state.filterTodos }),\n  mapDispatchToProps,\n)(HeadOfTodo);\n","import HeadOfTodo from './headoftodo';\n\nexport default HeadOfTodo;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Dropdown from '../../helpers/dropdown';\nimport './style.css';\nimport {\n  createTodo,\n  showModal,\n  editTodo,\n  clearEditItem,\n} from '../../../actions';\n\nclass ModalWindow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openByPriority: {\n        name: 'openByPriority',\n        open: true,\n      },\n      title: '',\n      description: '',\n      priority: 'high',\n      id: null,\n      done: false,\n    };\n\n    this.visibleToggle = this.visibleToggle.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.resetData = this.resetData.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { editItem } = this.props;\n    if (editItem) {\n      if (prevProps.editItem !== editItem) {\n        const { title, description, priority, id, done } = editItem;\n        this.setState({\n          title,\n          description,\n          priority,\n          id,\n          done,\n        });\n      }\n    }\n  }\n\n  handleChange(e) {\n    const target = e.target.tagName;\n    const name = target === 'INPUT' ? 'title' : 'description';\n    const { value } = e.target;\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleSubmit(event) {\n    const { title, description, priority, done, id } = this.state;\n    const createObject = {\n      title,\n      description,\n      priority,\n      done,\n    };\n    const {\n      handleShowModal,\n      creatTodoInComp,\n      editTodoInComponent,\n      editItem,\n      clearEditItemInComponent,\n    } = this.props;\n\n    event.preventDefault();\n    if (!editItem) {\n      creatTodoInComp(createObject);\n    } else {\n      editTodoInComponent({ ...createObject, id });\n      clearEditItemInComponent();\n    }\n\n    handleShowModal(false);\n    this.resetData();\n  }\n\n  handleCancel() {\n    const { handleShowModal } = this.props;\n    handleShowModal(false);\n    this.resetData();\n  }\n\n  handleClick(e) {\n    this.setState({\n      priority: e.target.innerText,\n    });\n  }\n\n  resetData() {\n    this.setState({\n      title: '',\n      description: '',\n      priority: 'high',\n      id: null,\n      done: false,\n    });\n  }\n\n  visibleToggle(item) {\n    this.setState(prevState => ({\n      [item.name]: {\n        ...prevState[item.name],\n        open: !prevState[item.name].open,\n      },\n    }));\n  }\n\n  render() {\n    const { openByPriority, title, description, priority } = this.state;\n    const { show } = this.props;\n    const priorityItems = ['high', 'normal', 'low'];\n\n    return (\n      <div className={show ? 'modalWindow show' : 'modalWindow'}>\n        <form className=\"createTodoContent\" onSubmit={this.handleSubmit}>\n          <label>\n            Title:\n            <input\n              type=\"text\"\n              placeholder=\"Title\"\n              title=\"please fill this field\"\n              className=\"form-control\"\n              value={title}\n              onChange={this.handleChange}\n              required\n            />\n          </label>\n          <label>\n            Description:\n            <div>\n              <textarea\n                placeholder=\"Description\"\n                className=\"form-control\"\n                value={description}\n                onChange={this.handleChange}\n              />\n            </div>\n          </label>\n          <p>Priority: </p>\n          <Dropdown\n            items={priorityItems}\n            dropdownInf={openByPriority}\n            visibleToggle={this.visibleToggle}\n            handleClick={this.handleClick}\n            textValue={priority}\n          />\n          <div className=\"btnGroup\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-danger\"\n              onClick={this.handleCancel}\n            >\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"btn btn-outline-success\">\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nModalWindow.defaultProps = {\n  editItem: undefined,\n};\n\nModalWindow.propTypes = {\n  show: PropTypes.bool.isRequired,\n  editItem: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    done: PropTypes.bool.isRequired,\n  }),\n  handleShowModal: PropTypes.func.isRequired,\n  creatTodoInComp: PropTypes.func.isRequired,\n  editTodoInComponent: PropTypes.func.isRequired,\n  clearEditItemInComponent: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  show: state.todos.showModal,\n  editItem: state.todos.editItem,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  creatTodoInComp: todo => dispatch(createTodo(todo)),\n  editTodoInComponent: todo => dispatch(editTodo(todo)),\n  handleShowModal: value => dispatch(showModal(value)),\n  clearEditItemInComponent: () => dispatch(clearEditItem()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindow);\n","import ModalWindow from './modalwindow';\n\nexport default ModalWindow;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { editTodo, removeTodo, toggleTodo } from '../../../actions';\n\nclass TodoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dropdownOpen: false,\n    };\n\n    this.handleOpen = this.handleOpen.bind(this);\n  }\n\n  handleOpen() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen,\n    }));\n  }\n\n  render() {\n    const {\n      todo,\n      editTodoInComponent,\n      removeTodoInComponent,\n      toggleTodoInComponent,\n    } = this.props;\n    const { dropdownOpen } = this.state;\n    return (\n      <div\n        className={`card text-white ${\n          todo.done ? 'bg-success' : 'bg-secondary'\n        }  mb-3 todoItem show`}\n      >\n        <div className=\"card-header\">{todo.title}</div>\n        <div className=\"card-body\">\n          <p className=\"card-text\">{todo.description}</p>\n        </div>\n        <div className=\"d-flex justify-content-around card-footer\">\n          <p>{todo.priority}</p>\n\n          <div\n            className={\n              dropdownOpen ? 'dropdownEditTodo open' : 'dropdownEditTodo'\n            }\n          >\n            <button type=\"button\" onClick={this.handleOpen}>\n              ...\n            </button>\n            <ul>\n              <li\n                onClick={() => {\n                  toggleTodoInComponent(todo.id);\n                  this.handleOpen();\n                }}\n              >\n                done\n              </li>\n              <li\n                onClick={() => {\n                  editTodoInComponent(todo);\n                  this.handleOpen();\n                }}\n              >\n                edit\n              </li>\n              <li\n                onClick={() => {\n                  removeTodoInComponent(todo.id);\n                }}\n              >\n                delete\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    done: PropTypes.bool.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n  }).isRequired,\n  editTodoInComponent: PropTypes.func.isRequired,\n  removeTodoInComponent: PropTypes.func.isRequired,\n  toggleTodoInComponent: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  editTodoInComponent: todo => dispatch(editTodo(todo)),\n  toggleTodoInComponent: id => dispatch(toggleTodo(id)),\n  removeTodoInComponent: id => dispatch(removeTodo(id)),\n});\n\nexport default connect(null, mapDispatchToProps)(TodoItem);\n","function sorted(filter, array) {\n  let copyTodos = [...array];\n\n  switch (filter.completed) {\n    case 'done': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.done);\n      break;\n    }\n    case 'open': {\n      copyTodos = copyTodos.filter(todoItem => !todoItem.done);\n      break;\n    }\n    default:\n      break;\n  }\n\n  switch (filter.priority) {\n    case 'high': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'high');\n      break;\n    }\n    case 'normal': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'normal');\n      break;\n    }\n    case 'low': {\n      copyTodos = copyTodos.filter(todoItem => todoItem.priority === 'low');\n      break;\n    }\n    default:\n      break;\n  }\n  if (filter.searchText) {\n    copyTodos = copyTodos.filter(todoItem =>\n      todoItem.title.includes(filter.searchText),\n    );\n  }\n\n  return copyTodos.sort((x, y) => x.done - y.done);\n}\nexport default sorted;\n","import sorted from './sorted';\n\nexport default sorted;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport TodoItem from './todoitem';\nimport sorted from '../../helpers/sorted';\nimport './style.css';\n\nfunction TodoList(props) {\n  const { todos, filter } = props;\n  const filterTodos = sorted(filter, todos);\n\n  return (\n    <ul className=\"todoList\">\n      {filterTodos.map(todo => {\n        return <TodoItem key={todo.id} todo={todo} />;\n      })}\n    </ul>\n  );\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      done: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string.isRequired,\n      priority: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  filter: PropTypes.shape({\n    searchText: PropTypes.string.isRequired,\n    priority: PropTypes.string.isRequired,\n    completed: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(state => ({\n  todos: state.todos.todos,\n  filter: state.filterTodos,\n}))(TodoList);\n","import React from 'react';\nimport HeadOfTodo from './headoftodo';\nimport ModalWindow from './modalwindow';\nimport TodoList from './todolist/todolist';\n\nconst Main = () => (\n  <>\n    <HeadOfTodo />\n    <ModalWindow />\n    <TodoList />\n  </>\n);\n\nexport default Main;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './app.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './header';\nimport Footer from './footer';\nimport Main from './main/main';\n\nfunction TodosPage() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nfunction NotFoundPage() {\n  return <h1>Not Found...</h1>;\n}\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect to=\"/todos\" />\n      </Route>\n      <Route path=\"/todos\" component={TodosPage} />\n      <Route path=\"*\" component={NotFoundPage} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import {\n  CREATE_TODO,\n  EDIT_TODO,\n  TOGGLE_TODO,\n  REMOVE_TODO,\n  SHOW_MODAL,\n  CLEAR_EDIT_ITEM,\n} from '../actions';\n\nconst initialState = {\n  todos: [],\n  showModal: false,\n  editItem: undefined,\n};\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TODO:\n      return {\n        ...state,\n        showModal: action.showModal,\n        todos: [\n          ...state.todos,\n          {\n            id: Date.now(),\n            ...action.todo,\n          },\n        ],\n      };\n    case EDIT_TODO:\n      return {\n        ...state,\n        showModal: action.showModal,\n        editItem: action.todo,\n        todos: state.todos.map(todo =>\n          todo.id === action.todo.id ? { ...action.todo } : todo,\n        ),\n      };\n    case TOGGLE_TODO:\n      return {\n        ...state,\n        todos: state.todos.map(todo =>\n          todo.id === action.id ? { ...todo, done: !todo.done } : todo,\n        ),\n      };\n    case REMOVE_TODO:\n      return {\n        ...state,\n        todos: state.todos.filter(todo => todo.id !== action.id),\n      };\n    case SHOW_MODAL:\n      return {\n        ...state,\n        showModal: action.value,\n      };\n    case CLEAR_EDIT_ITEM:\n      return {\n        ...state,\n        editItem: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n","import { SET_VISIBILITY_FILTER, SORTY_BY } from '../actions';\n\nconst filterTodos = (state = SORTY_BY, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default filterTodos;\n","import { combineReducers } from 'redux';\nimport todos from './todos';\nimport filterTodos from './filterTodos';\n\nexport default combineReducers({\n  todos,\n  filterTodos,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport rootReducer from './reducers';\n\nconst store = createStore(\n  rootReducer,\n  /* eslint-disable no-underscore-dangle */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter basename=\"/\">\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}